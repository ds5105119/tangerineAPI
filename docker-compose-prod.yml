networks:
  backend:
    driver: bridge
    internal: true
  frontend:
    driver: bridge
  pulsar:
    driver: bridge

services:
  django:
    image: ds5105119/tangerine:main
    container_name: tangerine_api_django
    restart: always
    networks:
      - backend
      - frontend
      - pulsar
    entrypoint: ["sh", "-c"]
    command:
    - "poetry run python manage.py makemigrations --noinput
    && poetry run python manage.py migrate
    && poetry run gunicorn -c config/gunicorn_config.py"
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
    environment:
      DJANGO_SETTINGS_MODULE: config.settings.prod
      POSTGRES_HOST: db
      DEBUG: False
    ports:
      - "8000:8000"
    deploy:
      resources:
        limits:
          memory: 1.5g

  db:
    image: postgres:alpine
    container_name: tangerine_api_db
    restart: always
    networks:
      - frontend
      - backend
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    shm_size: 500mb
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    deploy:
      resources:
        limits:
          memory: 512mb

  redis:
    image: redis:alpine
    container_name: tangerine_api_redis
    restart: always
    networks:
      - backend
    command: >
      redis-server
      --port ${REDIS_PORT}
      --maxmemory 200mb
      --maxmemory-policy volatile-lru
    deploy:
      resources:
        limits:
          memory: 256mb

  # Start zookeeper
  zookeeper:
    image: apachepulsar/pulsar:latest
    container_name: zookeeper
    restart: on-failure
    networks:
      - pulsar
    volumes:
      - /home/ec2-user/zookeeper_data:/pulsar/data/zookeeper
    environment:
      - metadataStoreUrl=zk:zookeeper:2181
      - PULSAR_MEM=-Xms256m -Xmx512m -XX:MaxDirectMemorySize=512m
    command: >
      bash -c "bin/apply-config-from-env.py conf/zookeeper.conf && \
             bin/generate-zookeeper-config.sh conf/zookeeper.conf && \
             exec bin/pulsar zookeeper"
    healthcheck:
      test: [ "CMD", "bin/pulsar-zookeeper-ruok.sh" ]
      interval: 10s
      timeout: 5s
      retries: 30
    deploy:
      resources:
        limits:
          memory: 600m

  # Init cluster metadata
  pulsar-init:
    image: apachepulsar/pulsar:latest
    container_name: pulsar-init
    hostname: pulsar-init
    restart: "no"
    networks:
      - pulsar
    command: >
      bin/pulsar initialize-cluster-metadata \
               --cluster cluster-a \
               --zookeeper zookeeper:2181 \
               --configuration-store zookeeper:2181 \
               --web-service-url http://broker:8080 \
               --broker-service-url pulsar://broker:6650
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      - PULSAR_MEM=-Xms256m -Xmx512m -XX:MaxDirectMemorySize=512m
    deploy:
      resources:
        limits:
          memory: 600m
      replicas: 1
      restart_policy:
        condition: none

  # Start bookie
  bookie:
    image: apachepulsar/pulsar:latest
    container_name: bookie
    restart: on-failure
    networks:
      - pulsar
    environment:
      - clusterName=cluster-a
      - zkServers=zookeeper:2181
      - metadataServiceUri=metadata-store:zk:zookeeper:2181
      - advertisedAddress=bookie
      - BOOKIE_MEM=-Xms512m -Xmx768m -XX:MaxDirectMemorySize=768m
    depends_on:
      zookeeper:
        condition: service_healthy
      pulsar-init:
        condition: service_completed_successfully
    volumes:
      - ./data/bookkeeper:/pulsar/data/bookkeeper
    command: bash -c "bin/apply-config-from-env.py conf/bookkeeper.conf && exec bin/pulsar bookie"
    deploy:
      resources:
        limits:
          memory: 1g

  # Start broker
  broker:
    image: apachepulsar/pulsar:latest
    container_name: broker
    hostname: broker
    restart: on-failure
    networks:
      - pulsar
    environment:
      - metadataStoreUrl=zk:zookeeper:2181
      - zookeeperServers=zookeeper:2181
      - clusterName=cluster-a
      - managedLedgerDefaultEnsembleSize=1
      - managedLedgerDefaultWriteQuorum=1
      - managedLedgerDefaultAckQuorum=1
      - advertisedAddress=broker
      - advertisedListeners=external:pulsar://broker:6650
      - PULSAR_MEM=-Xms512m -Xmx768m -XX:MaxDirectMemorySize=768m
    depends_on:
      zookeeper:
        condition: service_healthy
      bookie:
        condition: service_started
    ports:
      - "6650:6650"
      - "8080:8080"
    command: bash -c "bin/apply-config-from-env.py conf/broker.conf && exec bin/pulsar broker"
    deploy:
      resources:
        limits:
          memory: 1g

volumes:
  postgres_data:
