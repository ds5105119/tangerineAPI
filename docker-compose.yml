services:
  # k8s Start
  django:
    container_name: tangerine_api_django
    restart: always
    entrypoint: ["sh", "-c"]
    command:
    - "poetry run python manage.py makemigrations --noinput
    && poetry run python manage.py migrate
    && poetry run gunicorn -c config/gunicorn_config.py"
    build:
      context: .
      dockerfile: docker/django/Dockerfile
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
    environment:
      DJANGO_SETTINGS_MODULE: config.settings.docker_dev
      POSTGRES_HOST: db
      DEBUG: True
    ports:
      - "8000:8000"
    networks:
      - backend
      - frontend
  # k8s end

  db:
    container_name: tangerine_api_db
    image: postgres:alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    networks:
      - backend

  redis:
    container_name: tangerine_api_redis
    image: redis:alpine
    command: >
      redis-server
      --port ${REDIS_PORT}
      --maxmemory 1gb
      --maxmemory-policy volatile-lru
    restart: always
    networks:
      - backend
    deploy:
      resources:
        limits:
          memory: 1.5gb

  kafka:
    container_name: tangerine_api_kafka
    image: apache/kafka:latest
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://localhost:9092,CONTROLLER://localhost:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 1
    networks:
      - backend

networks:
  backend:
    driver: bridge
    internal: true
  frontend:
    driver: bridge

volumes:
  postgres_data:
